1351. Count Negative Numbers in a Sorted Matrix

class Solution {
    public int countNegatives(int[][] grid) {
        //System.out.println(grid.length);
        int totalcount=0;
        for(int i=0;i<grid.length;i++){
            //entering into rows now
            int low=0;
            int high=grid[i].length-1;
            int mid=0;
            int result=0;
            int flag=0;
            //finding 1st occurence index of negative number
            while(low<=high)
            {
                mid=low+(high-low)/2;
                if(grid[i][mid]<0){
                   flag=1;
                    result=mid;
                    high=mid-1;
                }
                else low=mid+1;
                
                
            }
            System.out.println("1st ocuur="+result);
            
            //finding last occurence index of negative number
            int lo=0;
            int hi=grid[i].length-1;
            int mi=0;
            int res=0;
            int flg=0;
            //finding 1st occurence index of negative number
            while(lo<=hi)
            {
                mi=lo+(hi-lo)/2;
                if(grid[i][mi]<0){
                    flg=1;
                    res=mi;
                    lo=mi+1;
                }
                else lo=mi+1;
                
                
            }
            System.out.println("last st ocuur="+res);
            
            
            
            int count=0;
            if(flag==0 && flg==0) 
                count=0;
            else{
            count=res-result;
            count++;}
            System.out.println("count="+ count);
            
            totalcount=totalcount+count;
            
            
        }
        
        return totalcount;
        
        
    }
}